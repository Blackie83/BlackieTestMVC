@model PagedList.IPagedList<BlackieTestMVC.Models.Administration_Unit>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
  ViewBag.Title = "Units";
}

<h2>Units</h2>

@using (Html.BeginForm("Index", "Administration_Unit", FormMethod.Get, new { @class = "form-inline" }))
{
  <div class="panel panel-default">
    <div class="panel-body">
      <div class="form-horizontal">
        <div class="col-md-2">
          <label class="control-label">Name or Description:</label>
        </div>
        <div class="col-md-4">
          <input type="text" id="SearchString_Name" name="SearchString_Name" class="form-control" value="@ViewBag.CurrentFilter_Name" />
        </div>
        <div class="col-md-2">
          <label class="control-label">Is Active:</label>
        </div>
        <div class="col-md-4">
          @Html.DropDownList("SearchString_IsActive", (IEnumerable<SelectListItem>)@ViewBag.DropDown_IsActive, new { @class = "form-control" })
        </div>
      </div>
    </div>
    <div class="panel-footer">
      <input type="submit" value="Search" class="btn btn-primary" />&nbsp;
      <input type="button" value="Reset" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("Index", "Administration_Unit") + "'");" />
    </div>
  </div>
}

<div class="col-md-12" style="height:20px;"></div>

<p>
  @Html.ActionLink("Create New Unit", "Create")
</p>

<div class="panel panel-default">
  <div class="panel-body">
    <table class="table table-striped table-hover">
      <tr>Total Units: @Model.TotalItemCount</tr>
      <tr>
        <th></th>
        <th>
          @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstOrDefault().Unit_Name).ToString(), "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter_name = ViewBag.CurrentFilter_Name, currentFilter_IsActive = ViewBag.CurrentFilter_IsActive })
        </th>
        <th>
          @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstOrDefault().Unit_Description).ToString(), "Index", new { sortOrder = ViewBag.DescriptionSortParm, currentFilter_name = ViewBag.CurrentFilter_Name, currentFilter_IsActive = ViewBag.CurrentFilter_IsActive })
        </th>
        <th>
          @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstOrDefault().Unit_CreatedDate).ToString(), "Index", new { sortOrder = ViewBag.CreatedDateSortParm, currentFilter_name = ViewBag.CurrentFilter_Name, currentFilter_IsActive = ViewBag.CurrentFilter_IsActive })
        </th>
        <th>
          @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstOrDefault().Unit_ModifiedDate).ToString(), "Index", new { sortOrder = ViewBag.ModifiedDateSortParm, currentFilter_name = ViewBag.CurrentFilter_Name, currentFilter_IsActive = ViewBag.CurrentFilter_IsActive })
        </th>
        <th>
          @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstOrDefault().Unit_IsActive).ToString(), "Index", new { sortOrder = ViewBag.IsActiveSortParm, currentFilter_name = ViewBag.CurrentFilter_Name, currentFilter_IsActive = ViewBag.CurrentFilter_IsActive })
        </th>
      </tr>
      @foreach (var item in Model)
      {
        <tr>
          <td>
            @Html.ActionLink("Details", "Details", new { id = item.Unit_Id }) |
            @Html.ActionLink("Edit", "Edit", new { id = item.Unit_Id })
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Unit_Name)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Unit_Description)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Unit_CreatedDate)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.Unit_ModifiedDate)
          </td>
          <td>
            @BlackieTestMVC.App_Classes.InfoQuest_All.All_BoolToString((bool)item.Unit_IsActive)
          </td>
        </tr>
      }
    </table>
  </div>
  <div class="panel-footer">
    <div class="text-center">
      Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
      @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter_name = ViewBag.CurrentFilter_Name, currentFilter_IsActive = ViewBag.CurrentFilter_IsActive }))
    </div>
  </div>
</div>